body {
    font-family: sans-serif;
    margin: 0;
    background-color: #f4f4f4;
    color: #333;
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    overflow: hidden; /* Prevent body scrollbars when grid fits */
}

/* Header Trigger Zone Styling */
#header-trigger-zone {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 30px; /* Adjust as needed */
    z-index: 1000; /* High, but below the actual header when it's visible */
    /* background-color: rgba(255, 0, 0, 0.1); */ /* For debugging */
}

#manage-streams-btn {
    margin-left: 15px;
    padding: 0.3rem 0.6rem;
    background-color: #555;
    color: white;
    border: 1px solid #777;
    border-radius: 4px;
    cursor: pointer;
}
#manage-streams-btn:hover {
    background-color: #777;
}


header {
    background-color: #333;
    color: #fff;
    padding: 1rem;
    text-align: center;
    position: fixed; /* Make header fixed */
    top: 0;
    left: 0;
    width: 100%;
    z-index: 1001; /* Above the trigger zone and content when visible */
    opacity: 0;
    visibility: hidden;
    transform: translateY(-100%);
    pointer-events: none;
    transition: opacity 0.3s ease, transform 0.3s ease, visibility 0s linear 0.3s;
}

header.header-visible {
    opacity: 1;
    visibility: visible;
    transform: translateY(0%);
    pointer-events: auto;
    /* Override transition for visibility to be immediate when becoming visible */
    transition: opacity 0.3s ease, transform 0.3s ease, visibility 0s linear 0s;
}


header h1 {
    margin: 0;
    font-size: 1.8rem;
}

.controls {
    margin-top: 0.5rem;
}

.controls label {
    margin-right: 0.5rem;
}

#stream-select {
    padding: 0.3rem;
    border-radius: 4px;
    border: 1px solid #ccc;
}

main {
    flex-grow: 1;
    padding: 1rem;
    padding-top: 100px; /* Approximate header height, adjust if necessary */
    display: flex; /* Allow video-grid-container to flex-grow */
    flex-direction: column; /* Stack children vertically */
    overflow: hidden; /* Prevent scrollbars on main if grid fits perfectly */
}

#video-grid-container {
    display: grid;
    /* grid-template-columns are set by JS */
    gap: 10px;
    width: 100%;
    flex-grow: 1; /* Takes available vertical space in main */
    /* overflow-y: auto; */ /* Removed to prevent internal scrollbars */
}

.video-player-wrapper {
    position: relative;
    background-color: #000;
    border: 3px solid transparent; /* Erhöhte Standardrahmenbreite für Layout-Konsistenz */
    box-shadow: 0 2px 5px rgba(0,0,0,0.2);
    transition: border-color 0.3s ease; /* Sanfter Übergang für die Rahmenfarbe */
}

.video-player-wrapper.audio-active {
    border-color: red; /* Die Rahmenfarbe wird hier gesetzt, die Breite vom Basis-Style geerbt */
    animation: pulseRedGlow 1.2s infinite alternate ease-in-out;
    /* Setze den initialen box-shadow, damit er auch ohne Animation (oder vor dem ersten Zyklus) da ist
       und als Basis für die Animation dient. Dieser sollte dem 'from' oder 'to' Zustand entsprechen,
       oder ein Mittelwert sein, je nach gewünschtem Startaussehen. */
    box-shadow: 0 0 8px 2px rgba(255, 0, 0, 0.5), 0 2px 5px rgba(0,0,0,0.2);
}

@keyframes pulseRedGlow {
    from {
        box-shadow: 0 0 8px 2px rgba(255, 0, 0, 0.5), 0 2px 5px rgba(0,0,0,0.2); /* Kombiniere mit existierendem Schatten */
    }
    to {
        box-shadow: 0 0 18px 6px rgba(255, 0, 0, 0.7), 0 2px 5px rgba(0,0,0,0.2); /* Kombiniere mit existierendem Schatten */
    }
}

/* Modal Base */
.modal {
    display: none; /* Hidden by default */
    position: fixed;
    z-index: 2000; /* Above everything else */
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto; /* Enable scroll if needed */
    background-color: rgba(0,0,0,0.6); /* Dim background */
    padding-top: 60px; /* Location of the box */
}

.modal.modal-open {
    display: block;
}

.modal-content {
    background-color: #fefefe;
    margin: 5% auto; /* 5% from the top and centered */
    padding: 20px;
    border: 1px solid #888;
    width: 80%; /* Could be more or less, depending on screen size */
    max-width: 700px;
    border-radius: 8px;
    position: relative;
}

.modal-close-btn {
    color: #aaa;
    position: absolute;
    top: 10px;
    right: 20px;
    font-size: 28px;
    font-weight: bold;
    cursor: pointer;
}

.modal-close-btn:hover,
.modal-close-btn:focus {
    color: black;
    text-decoration: none;
}

/* Stream List Editor in Modal */
#modal-stream-list-container {
    max-height: 300px;
    overflow-y: auto;
    border: 1px solid #ccc;
    margin-bottom: 20px;
    padding: 10px;
}

#modal-stream-list-container .stream-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 8px 0;
    border-bottom: 1px solid #eee;
}
#modal-stream-list-container .stream-item:last-child {
    border-bottom: none;
}

#modal-stream-list-container .stream-details {
    flex-grow: 1;
}
#modal-stream-list-container .stream-actions button {
    margin-left: 5px;
    padding: 3px 7px;
    cursor: pointer;
}
#modal-stream-list-container .stream-actions input[type="checkbox"] {
    margin-left: 10px;
    vertical-align: middle;
}


/* Stream Edit Form in Modal */
#stream-form div {
    margin-bottom: 10px;
}
#stream-form label {
    display: block;
    margin-bottom: 5px;
    font-weight: bold;
}
#stream-form input[type="text"],
#stream-form input[type="url"],
#stream-form select {
    width: calc(100% - 12px); /* Full width minus padding/border */
    padding: 6px;
    border: 1px solid #ccc;
    border-radius: 4px;
}
#stream-form input[type="checkbox"] {
    vertical-align: middle;
    margin-right: 5px;
}

#stream-form button {
    padding: 8px 15px;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
}
#stream-form button:hover {
    background-color: #0056b3;
}
#stream-form button#cancel-edit-btn {
    background-color: #6c757d;
    margin-left: 10px;
}
#stream-form button#cancel-edit-btn:hover {
    background-color: #545b62;
}

/* Global Settings in Modal */
#global-settings-container {
    margin-top: 20px;
    padding-top: 15px;
    border-top: 1px solid #eee;
}

#global-settings-container div {
    margin-bottom: 10px;
}

#global-settings-container label {
    display: inline-block; /* Align checkbox and label nicely */
    margin-right: 10px;
    font-weight: normal; /* Override form label bold if not desired */
}

#global-settings-container input[type="checkbox"] {
    vertical-align: middle;
}

.video-player-wrapper video {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: contain; /* Stellt sicher, dass das Video immer vollständig sichtbar ist, ggf. mit Letter-/Pillarboxing */
}

.remove-stream-btn {
    position: absolute;
    top: 5px;
    right: 5px;
    background-color: rgba(255, 0, 0, 0.7);
    color: white;
    border: none;
    border-radius: 50%;
    width: 25px;
    height: 25px;
    font-size: 14px;
    line-height: 25px;
    text-align: center;
    cursor: pointer;
    z-index: 10;
    opacity: 0; /* Standardmäßig unsichtbar */
    visibility: hidden; /* Standardmäßig nicht im Layout und nicht klickbar */
    transition: opacity 0.3s ease, visibility 0s ease 0.3s; /* Visibility verzögert ändern */
}

.video-player-wrapper:hover .remove-stream-btn {
    opacity: 0.7; /* Sichtbar beim Hovern über den Wrapper */
    visibility: visible;
    transition-delay: 0s; /* Keine Verzögerung für Visibility beim Sichtbarwerden */
}

.remove-stream-btn:hover {
    background-color: rgba(255, 0, 0, 1);
    opacity: 1; /* Volle Opazität beim direkten Hovern über den Button */
}

/* Vollbild-Styling */
.video-player-wrapper video:-webkit-full-screen { /* Chrome, Safari, Opera */
    width: 100%;
    height: 100%;
    object-fit: contain; /* Im Vollbildmodus sollte das gesamte Video sichtbar sein */
}
.video-player-wrapper video:-moz-full-screen { /* Firefox */
    width: 100%;
    height: 100%;
    object-fit: contain;
}
.video-player-wrapper video:-ms-fullscreen { /* IE11 */
    width: 100%;
    height: 100%;
    object-fit: contain;
}
.video-player-wrapper video:fullscreen { /* Standard */
    width: 100%;
    height: 100%;
    object-fit: contain;
}

/* Spezifische Grid-Layout-Klassen, die von JS gesetzt werden können */
.grid-cols-1 { grid-template-columns: 1fr; }
.grid-cols-2 { grid-template-columns: repeat(2, 1fr); }
.grid-cols-3 { grid-template-columns: repeat(3, 1fr); }
/* usw. oder eine dynamischere Methode direkt in JS, falls erforderlich */

/* Für den Fall, dass das Video-Grid sehr voll wird, könnte man die minmax-Breite anpassen */
@media (max-width: 768px) {
    #video-grid-container {
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    }
    header h1 {
        font-size: 1.5rem;
    }
}

/* Portrait-Modus: Höhe ist größer als Breite */
@media (orientation: portrait) {
    #video-grid-container {
        grid-template-columns: 1fr; /* Eine Spalte */
    }
}

@media (max-width: 480px) {
    /* Diese Regel könnte mit der Portrait-Regel interagieren.
       Die Portrait-Regel ist spezifischer für die Orientierung.
       Wenn max-width: 480px auch im Portrait-Modus gilt, ist 1fr bereits gesetzt.
       Wenn max-width: 480px im Landscape-Modus gilt, würde diese Regel 1fr setzen,
       was für sehr schmale Landscape-Geräte sinnvoll sein kann.
       Die (orientation: portrait) ist oft die stärkere Bedingung für einspaltige Layouts.
       Wir behalten sie, aber die Portrait-Regel wird sie für Portrait-Ansichten überschreiben,
       falls die Logik in JS nicht ohnehin schon 1 Spalte für Portrait vorgibt.
    */
    #video-grid-container {
        /* Die (orientation: portrait) Regel oben ist meist ausreichend.
           Diese Regel hier würde greifen, wenn das Gerät sehr schmal ist,
           aber im Landscape-Modus ist. Bei 480px Breite im Landscape ist 1 Spalte
           wahrscheinlich auch sinnvoll.
        */
        /* grid-template-columns: 1fr; */ /* Vorerst auskommentiert, um die Portrait-Regel klarer zu testen */
    }
    .controls {
        display: flex;
        flex-direction: column;
        align-items: center;
    }
    .controls label {
        margin-bottom: 0.3rem;
    }
}

/* Styling for dragged video player */
.video-player-wrapper.dragging {
    opacity: 0.5;
    border: 3px dashed #007bff; /* Example: blue dashed border */
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
}
